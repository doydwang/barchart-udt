// DO NOT EDIT: Generated by NarSystemGenerate.
package it0003;

import java.io.File;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Generated class to load the correct version of the jni library
 * 
 * @author maven-nar-plugin
 */
public final class NarSystemOne {

	private final static Logger log = LoggerFactory.getLogger(NarSystemOne.class);

	private NarSystemOne() {
	}

	final static String PATH = "./target/nar/it0003-jni-1.0-SNAPSHOT-amd64-Linux-g++-jni/lib/amd64-Linux-g++/jni";

	final static String NAME = "it0003-jni-1.0-SNAPSHOT";

	/**
	 * Load jni library: it0003-jni-1.0-SNAPSHOT
	 * 
	 * @author maven-nar-plugin
	 */
	public static void loadLibrary() {

		// System.loadLibrary("it0003-jni-1.0-SNAPSHOT");

		String libName = System.mapLibraryName(NAME);

		log.info("libName : {}", libName);

		File libFolder = new File(PATH);
		String absPath = libFolder.getAbsolutePath();

		log.info("absPath : {}", absPath);
		log.info("libFolder : {}", libFolder.isDirectory());

		systemLoad(libFolder, libName);

	}

	private static void systemLoad(File targetFolder, String fileName) {

		String absolutePath = //
		targetFolder.getAbsolutePath() + File.separator + fileName;

		try {
			System.load(absolutePath);
		} catch (Exception e) {
			log.error("load failed : path={} message={}", //
					absolutePath, e.getMessage());
			throw new UnsupportedOperationException(
					"native library load failed");
		}

	}
}
