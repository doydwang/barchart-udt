<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.barchart.udt</groupId>
		<artifactId>barchart-udt4-parent</artifactId>
		<version>1.0.3-SNAPSHOT</version>
	</parent>

	<artifactId>barchart-udt4</artifactId>
	<packaging>jar</packaging>

	<name>${project.artifactId}</name>

	<properties>

		<!--TODO re-do time stamp generator -->
		<buildStamp>${maven.build.timestamp}</buildStamp>
		<mavenStamp>ARTIFACT='${project.artifactId}';VERSION='${project.version}';TIMESTAMP='${buildStamp}';</mavenStamp>

		<licenceYear>2009-2011</licenceYear>
		<licenceOrganization>Barchart, Inc.</licenceOrganization>
		<licenceWebsite>http://www.barchart.com/</licenceWebsite>
		<licenceDevelopers>Andrei Pozolotin;</licenceDevelopers>

		<moduleUDT>UDT4</moduleUDT>

		<target>${project.build.directory}</target>
		<checkoutUDT>${target}/udt</checkoutUDT>
		<connectionUDT>scm:cvs:pserver:anonymous:@udt.cvs.sourceforge.net:/cvsroot/udt:${moduleUDT}</connectionUDT>

		<nativeSrc>src/main/c++</nativeSrc>
		<folderJNI>jni</folderJNI>
		<folderUDT>udt</folderUDT>
		<nativeSrcJNI>${nativeSrc}/${folderJNI}</nativeSrcJNI>
		<nativeSrcUDT>${nativeSrc}/${folderUDT}</nativeSrcUDT>

	</properties>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

	</dependencies>

	<build>

		<resources>

			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.txt</include>
					<include>**/*.properties</include>
				</includes>
			</resource>

			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.so</include>
					<include>**/*.jnilib</include>
					<include>**/*.dll</include>
					<include>**/*.map</include>
					<include>**/*.sym</include>
				</includes>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.txt</include>
					<include>**/*.properties</include>
				</includes>
			</testResource>

			<testResource>
				<directory>src/nar/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.so</include>
					<include>**/*.jnilib</include>
					<include>**/*.dll</include>
					<include>**/*.map</include>
					<include>**/*.sym</include>
				</includes>
			</testResource>

		</testResources>

		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>make-timestamp-property</id>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>${basedir}/build/script/timestamp.groovy</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<!--"arguments" are overwritten by overriding profiles -->
					<arguments>
						--update-snapshots \
						--define skipTests \
						--activate-profiles \
						sonatype-oss-release,release-properties,release-versions,release-attach</arguments>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
			<id>update-sequence</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>groovy-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>make-timestamp-property</id>
								<phase>validate</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>${basedir}/build/script/sequence.groovy</source>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>



		<profile>
			<!-- TODO enable during release -->
			<!-- update license headers -->
			<id>license</id>
			<build>
				<plugins>

					<plugin>
						<groupId>com.google.code.maven-license-plugin</groupId>
						<artifactId>maven-license-plugin</artifactId>
						<configuration>
							<encoding>UTF-8</encoding>
							<quiet>false</quiet>
							<failIfMissing>true</failIfMissing>
							<header>${basedir}/build/licence/licence-bsd.template</header>
							<properties>
								<STAMP>${mavenStamp}</STAMP>
								<YEAR>${licenceYear}</YEAR>
								<ORGANIZATION>${licenceOrganization}</ORGANIZATION>
								<WEBSITE>${licenceWebsite}</WEBSITE>
								<DEVELOPERS>${licenceDevelopers}</DEVELOPERS>
							</properties>
							<includes>
								<include>src/main/**</include>
								<include>src/rest/**</include>
								<include>${nativeSrcJNI}/**</include>
							</includes>
							<excludes>
								<exclude>${nativeSrcUDT}/**</exclude>
								<exclude>**/*.dll</exclude>
								<exclude>**/*.jnilib</exclude>
								<exclude>**/*.so</exclude>
								<exclude>**/*.map</exclude>
								<exclude>**/*.properties</exclude>
							</excludes>
							<mapping>
								<properties>SCRIPT_STYLE</properties>
							</mapping>
						</configuration>
						<executions>
							<execution>
								<id>format-license-headers</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>format</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<!-- get updated UDT sources form Yunhong Gu CVS -->
			<id>checkout</id>
			<build>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<configuration>
							<connectionType>connection</connectionType>
							<connectionUrl>${connectionUDT}</connectionUrl>
							<checkoutDirectory>${checkoutUDT}</checkoutDirectory>
							<useExport>true</useExport>
							<cvs-settings>
								<traceCvsCommand>true</traceCvsCommand>
								<compressionLevel>5</compressionLevel>
							</cvs-settings>
						</configuration>
						<executions>
							<execution>
								<id>checkout-udt-sources-from-csv</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>checkout</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-udt-sources-after-checkout</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory> ${checkoutUDT}/${moduleUDT}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${nativeSrcUDT}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-patch-plugin</artifactId>
						<executions>
							<execution>
								<id>apply-patches</id>
								<phase>process-sources</phase>
								<goals>
									<goal>apply</goal>
								</goals>
								<configuration>
									<targetDirectory>${basedir}</targetDirectory>
									<patchDirectory>src/main/patches</patchDirectory>
									<patchTrackingFile>target/patches/patches-applied.txt</patchTrackingFile>
									<naturalOrderProcessing>true</naturalOrderProcessing>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>int</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<debug>false</debug>
							<ignoreFailures>false</ignoreFailures>
							<projectsDirectory>src/int/</projectsDirectory>
							<settingsFile>src/int/settings.xml</settingsFile>
							<cloneProjectsTo>${project.build.directory}/int-work</cloneProjectsTo>
							<localRepositoryPath>${project.build.directory}/int-repo</localRepositoryPath>
							<invokerPropertiesFile>invoker-${label}-${jdk}.properties</invokerPropertiesFile>
							<setupIncludes>
								<!-- <setupInclude>int-00-parent/pom.xml</setupInclude> -->
								<!-- <setupInclude>int-01-bundle/pom.xml</setupInclude> -->
							</setupIncludes>
							<pomIncludes>
								<!-- <pomInclude>int-01-bundle/pom.xml</pomInclude> -->
								<!-- <pomInclude>int-02-bundle-test/pom.xml</pomInclude> -->
								<pomInclude>all/pom.xml</pomInclude>
							</pomIncludes>
							<goals>
								<!-- goals for child maven invocation -->
								<goal>clean</goal>
								<goal>install</goal>
							</goals>
						</configuration>
						<executions>
							<execution>
								<id>install-and-run</id>
								<phase>integration-test</phase>
								<goals>
									<!-- goals for parent maven invocation -->
									<goal>install</goal>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- attach multiplatform artifacts during release -->
			<id>release-attach</id>
			<build>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-nar-all</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${lin32}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${lin32}.nar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${lin64}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${lin64}.nar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${mac32}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${mac32}.nar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${mac64}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${mac64}.nar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${win32}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${win32}.nar</destFileName>
										</artifactItem>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.artifactId}</artifactId>
											<classifier>${win64}</classifier>
											<version>${snapshotVersion}</version>
											<type>nar</type>
											<destFileName>${project.artifactId}-${project.version}-${win64}.nar</destFileName>
										</artifactItem>
									</artifactItems>
									<outputDirectory>target/nar-all</outputDirectory>
									<overWriteIfNewer>true</overWriteIfNewer>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-nar-all</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${lin32}.nar</file>
											<classifier>${lin32}</classifier>
											<type>nar</type>
										</artifact>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${lin64}.nar</file>
											<classifier>${lin64}</classifier>
											<type>nar</type>
										</artifact>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${mac32}.nar</file>
											<classifier>${mac32}</classifier>
											<type>nar</type>
										</artifact>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${mac64}.nar</file>
											<classifier>${mac64}</classifier>
											<type>nar</type>
										</artifact>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${win32}.nar</file>
											<classifier>${win32}</classifier>
											<type>nar</type>
										</artifact>
										<artifact>
											<file>target/nar-all/${project.artifactId}-${project.version}-${win64}.nar</file>
											<classifier>${win64}</classifier>
											<type>nar</type>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>nar_x86-Windows-gpp_dependencies</id>
			<activation>
				<os>
					<arch>x86</arch>
					<family>windows</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-deps-libs_x86-Windows-gpp</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>c:/mingw32/bin</directory>
											<filtering>false</filtering>
											<includes>
												<include>libgcc_s_sjlj-1.dll</include>
												<include>libstdc++-6.dll</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${basedir}/src/nar/resources/aol/x86-Windows-gpp/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>nar_amd64-Windows-gpp_dependencies</id>
			<activation>
				<os>
					<arch>amd64</arch>
					<family>windows</family>
				</os>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-deps-libs_amd64-Windows-gpp</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>c:/mingw64/bin</directory>
											<filtering>false</filtering>
											<includes>
												<include>libgcc_s_sjlj_64-1.dll</include>
												<include>libstdc++_64-6.dll</include>
											</includes>
										</resource>
									</resources>
									<outputDirectory>${basedir}/src/nar/resources/aol/amd64-Windows-gpp/lib</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<!-- native build configuration -->
			<id>nar</id>
			<build>
				<plugins>

					<!-- disable most nar "smart options processing" and use explicit aol.properties
						instead -->
					<plugin>
						<groupId>${narGroupId}</groupId>
						<artifactId>${narArtifactId}</artifactId>
						<extensions>true</extensions>
						<configuration>
							<!-- place nar artifacts into test classpath for unit tests; will
								also use for jar/nar packaging -->
							<targetDirectory>target/test-classes</targetDirectory>
							<libraries>
								<library>
									<type>jni</type>
									<narSystemPackage>com.barchart.udt</narSystemPackage>
									<linkCPP>false</linkCPP>
								</library>
							</libraries>
							<cpp>
								<debug>false</debug>
								<optimize>none</optimize>
								<exceptions>true</exceptions>
								<multiThreaded>true</multiThreaded>
								<clearDefaultOptions>false</clearDefaultOptions>
								<options>
									<!--these options are ignored by overriding profiles -->
								</options>
								<clearDefaultDefines>false</clearDefaultDefines>
								<clearDefaultUndefines>false</clearDefaultUndefines>
								<sourceDirectory>${nativeSrc}</sourceDirectory>
								<includes>
									<include>${folderJNI}/*.cpp</include>
									<include>${folderUDT}/src/*.cpp</include>
								</includes>
								<includePaths>
									<includePath>${nativeSrcJNI}</includePath>
									<includePath>${nativeSrcUDT}/src</includePath>
								</includePaths>
							</cpp>
							<java>
								<include>true</include>
							</java>
							<javah>
								<jniDirectory>${nativeSrcJNI}</jniDirectory>
							</javah>
							<linker>
								<map>false</map>
								<clearDefaultOptions>false</clearDefaultOptions>
								<options>
									<!--these options are ignored by overriding profiles -->
								</options>
							</linker>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>nar-resources</goal>
									<goal>nar-javah</goal>
									<goal>nar-compile</goal>
									<goal>nar-package</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>
